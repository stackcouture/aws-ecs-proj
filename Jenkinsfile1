pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'ap-south-1'
        TF_DIR             = 'ecs-terraform'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                    git branch: 'main',
                    credentialsId: 'github-cred',
                    url: 'https://github.com/stackcouture/aws-ecs-proj.git'
            }
        }

        stage('Authenticate with AWS and ECR') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                    sh '''
                        echo "Authenticating with AWS..."
                        export AWS_DEFAULT_REGION=${env.AWS_DEFAULT_REGION}
                        aws sts get-caller-identity
                    '''
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                input message: 'Approve Terraform Destory?', ok: 'Apply'
                dir("${env.TF_DIR}") {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                        sh '''
                            export AWS_DEFAULT_REGION=${env.AWS_DEFAULT_REGION}
                            terraform init
                            terraform destroy -auto-approve 
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up workspace after destroy..."
            cleanWs()
        }
    }
}